<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>AkiEvergarden</title>
  
  <subtitle>常绿之森</subtitle>
  <link href="https://blog.akievergarden.top/atom.xml" rel="self"/>
  
  <link href="https://blog.akievergarden.top/"/>
  <updated>2023-09-29T05:00:54.481Z</updated>
  <id>https://blog.akievergarden.top/</id>
  
  <author>
    <name>AkiEvergarden</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>openjdk-8的编译</title>
    <link href="https://blog.akievergarden.top/2023/09/28/openjdk-8%E7%9A%84%E7%BC%96%E8%AF%91/"/>
    <id>https://blog.akievergarden.top/2023/09/28/openjdk-8%E7%9A%84%E7%BC%96%E8%AF%91/</id>
    <published>2023-09-28T09:19:42.567Z</published>
    <updated>2023-09-29T05:00:54.481Z</updated>
    
    <content type="html"><![CDATA[<h1 id="手动编译一个jdk8"><a href="#手动编译一个jdk8" class="headerlink" title="手动编译一个jdk8"></a>手动编译一个jdk8</h1><p>学习JVM自然是要先自己构建一个jdk,做到管中窥豹，从而不会无从下手。</p><h1 id="前置准备"><a href="#前置准备" class="headerlink" title="前置准备"></a>前置准备</h1><h2 id="系统准备"><a href="#系统准备" class="headerlink" title="系统准备"></a>系统准备</h2><p>本次构建jdk-8使用的是 ubuntu-22.04.3-live-server-amd64，内核版本为：GNU&#x2F;Linux 5.15.0-84-generic x86_64</p><h2 id="硬件准备"><a href="#硬件准备" class="headerlink" title="硬件准备"></a>硬件准备</h2><p>基于VMware 的虚拟机，分配host AMD Ryzen 7 3800X 8-Core Processor 8核心 8GB内存</p><h2 id="调试工具"><a href="#调试工具" class="headerlink" title="调试工具"></a>调试工具</h2><p>Jetbrians Clion 使用Remote Development链接Ubuntu虚拟机</p><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><p>根据 <a href="https://hg.openjdk.org/jdk8/jdk8/raw-file/tip/README-builds.html">https://hg.openjdk.org/jdk8/jdk8/raw-file/tip/README-builds.html</a> 得知道：编译环境推荐为：</p><ol><li>gcc: 4.8</li><li>g++: 4.8</li><li>make: 3.81</li><li>bootstrap JDK: OpenJDK8</li></ol><h2 id="OpenJDK8源码"><a href="#OpenJDK8源码" class="headerlink" title="OpenJDK8源码"></a>OpenJDK8源码</h2><p><a href="https://codeload.github.com/openjdk/jdk/zip/refs/tags/jdk8-b120">https://codeload.github.com/openjdk/jdk/zip/refs/tags/jdk8-b120</a></p><h2 id="基本依赖"><a href="#基本依赖" class="headerlink" title="基本依赖"></a>基本依赖</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install build-essential libxrender-dev xorg-dev libasound2-dev libcups2-dev gawk zip libxtst-dev libxi-dev libxt-dev gobjc</span><br></pre></td></tr></table></figure><h1 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h1><h2 id="由于在ubuntu22-04-3-中没有gcc-4-8-的源，-我门需要导入旧版的源"><a href="#由于在ubuntu22-04-3-中没有gcc-4-8-的源，-我门需要导入旧版的源" class="headerlink" title="由于在ubuntu22.04.3 中没有gcc 4.8 的源， 我门需要导入旧版的源"></a>由于在ubuntu22.04.3 中没有gcc 4.8 的源， 我门需要导入旧版的源</h2>   <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/apt/sources.list</span><br></pre></td></tr></table></figure><p>   在最下方添加旧版源地址并保存</p>   <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">deb http://archive.ubuntu.com/ubuntu xenial main</span><br><span class="line">deb http://archive.ubuntu.com/ubuntu xenial universe</span><br></pre></td></tr></table></figure><p>   更新apt源信息，并安装gcc和g++</p>   <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install gcc-4.8 g++-4.8</span><br></pre></td></tr></table></figure><p>   在更新过程中 我遇到了</p>   <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Err:5 http://archive.ubuntu.com/ubuntu xenial InRelease</span><br><span class="line">The following signatures couldn<span class="string">&#x27;t be verified because the public key is not available: NO_PUBKEY 40976EAF437D05B5 NO_PUBKEY 3B4FE6ACC0B21F32</span></span><br><span class="line"><span class="string">Reading package lists... Done</span></span><br><span class="line"><span class="string">W: GPG error: http://archive.ubuntu.com/ubuntu xenial InRelease: The following signatures couldn&#x27;</span>t be verified because the public key is not available: NO_PUBKEY 40976EAF437D05B5 NO_PUBKEY 3B4FE6ACC0B21F32</span><br><span class="line">E: The repository <span class="string">&#x27;http://archive.ubuntu.com/ubuntu xenial InRelease&#x27;</span> is not signed.</span><br><span class="line">N: Updating from such a repository can<span class="string">&#x27;t be done securely, and is therefore disabled by default.</span></span><br><span class="line"><span class="string">N: See apt-secure(8) manpage for repository creation and user configuration details.</span></span><br></pre></td></tr></table></figure><p>   这是因为系统无法识别某些GPG公钥（PUBKEY）导致的。需要做的是在系统中获取这些缺失的公钥。可以使用以下命令来获取这些公钥：</p>   <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 40976EAF437D05B5 3B4FE6ACC0B21F32</span><br></pre></td></tr></table></figure><p>   设置安装的gcc g++4.8 为首选</p>   <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.8 100</span><br><span class="line">sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.8 100</span><br></pre></td></tr></table></figure><p>   查看版本：</p>   <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">root@aki:~<span class="comment"># g++ --version</span></span><br><span class="line">g++ (Ubuntu 4.8.5-4ubuntu2) 4.8.5</span><br><span class="line">Copyright (C) 2015 Free Software Foundation, Inc.</span><br><span class="line">This is free software; see the <span class="built_in">source</span> <span class="keyword">for</span> copying conditions.  There is NO</span><br><span class="line">warranty; not even <span class="keyword">for</span> MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.</span><br><span class="line"></span><br><span class="line">root@aki:~<span class="comment"># gcc --version</span></span><br><span class="line">gcc (Ubuntu 4.8.5-4ubuntu2) 4.8.5</span><br><span class="line">Copyright (C) 2015 Free Software Foundation, Inc.</span><br><span class="line">This is free software; see the <span class="built_in">source</span> <span class="keyword">for</span> copying conditions.  There is NO</span><br><span class="line">warranty; not even <span class="keyword">for</span> MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.</span><br></pre></td></tr></table></figure><h2 id="安装make-3-81版本"><a href="#安装make-3-81版本" class="headerlink" title="安装make 3.81版本"></a>安装make 3.81版本</h2><p>   从官方下载：</p>   <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://ftp.gnu.org/gnu/make/make-3.81.tar.gz</span><br></pre></td></tr></table></figure><p>   下载完成之后：</p>   <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf make-3.81.tar.gz </span><br><span class="line"><span class="built_in">cd</span> make-3.81/</span><br></pre></td></tr></table></figure><p>   接着修改代码，打开glob&#x2F;glob.c文件：</p>   <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="comment">#ifdef  HAVE_CONFIG_H</span></span><br><span class="line"><span class="comment"># include &lt;config.h&gt;</span></span><br><span class="line"><span class="comment">#endif</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#define __alloca alloca   &lt;- 添加这一句</span></span><br><span class="line"><span class="comment">#define __stat stat   &lt;- 添加这一句</span></span><br><span class="line">/* Enable GNU extensions </span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>   防止之后出现报错：</p>   <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">/usr/bin/ld: /root/make-3.81/glob/glob.c:955: undefined reference to `__stat<span class="string">&#x27;</span></span><br><span class="line"><span class="string">/usr/bin/ld: /root/make-3.81/glob/glob.c:809: undefined reference to `__stat&#x27;</span></span><br><span class="line">collect2: error: ld returned 1 <span class="built_in">exit</span> status</span><br><span class="line">make[1]: *** [Makefile:411: make] Error 1</span><br><span class="line">make[1]: Leaving directory <span class="string">&#x27;/root/make-3.81&#x27;</span></span><br><span class="line">make: *** [Makefile:603: install-recursive] Error 1</span><br></pre></td></tr></table></figure><p>   然后进行安装 make-3.81</p>   <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bash configure</span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure><p>   删除最新的make</p>   <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt remove make -y <span class="comment">#删除之前apt装的make，其位置在/usr/bin/make</span></span><br></pre></td></tr></table></figure><p>   删除链接</p>   <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">rm</span> /usr/bin/make</span><br></pre></td></tr></table></figure><p>   测试：</p>   <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">make -version</span><br><span class="line">GNU Make 3.81</span><br><span class="line">Copyright (C) 2006  Free Software Foundation, Inc.</span><br><span class="line">This is free software; see the <span class="built_in">source</span> <span class="keyword">for</span> copying conditions.</span><br><span class="line">There is NO warranty; not even <span class="keyword">for</span> MERCHANTABILITY or FITNESS FOR A</span><br><span class="line">PARTICULAR PURPOSE.</span><br><span class="line"></span><br><span class="line">This program built <span class="keyword">for</span> x86_64-unknown-linux-gnu</span><br></pre></td></tr></table></figure><h2 id="安装bootstrap-JDK-OpenJDK8"><a href="#安装bootstrap-JDK-OpenJDK8" class="headerlink" title="安装bootstrap JDK: OpenJDK8"></a>安装bootstrap JDK: OpenJDK8</h2><p>   由于JDK中某些代码是Java编写的，所以我们还需要安装一个启动JDK，启动JDK可以是当前版本或低一版本，比如我们要编译JDK8的源码，那么就可以使用JDK7、JDK8作为启动JDK，对源码中的一些java文件进行编译。这里我们选择安装 openjdk8作为启动JDK：</p>   <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install openjdk-8-jdk</span><br></pre></td></tr></table></figure><h2 id="编译openjdk8"><a href="#编译openjdk8" class="headerlink" title="编译openjdk8"></a>编译openjdk8</h2><p>   解压</p>   <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unzip jdk8-b120</span><br></pre></td></tr></table></figure><p>   进入目录</p>   <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> jdk-jdk8-b120/</span><br></pre></td></tr></table></figure><p>   修改文件以支持当前linux内核：<br>   首先是hotspot&#x2F;make&#x2F;linux&#x2F;Makefile文件</p>   <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">原有的 SUPPORTED_OS_VERSION = 2.4% 2.5% 2.6% 3%</span><br><span class="line">修改为 SUPPORTED_OS_VERSION = 2.4% 2.5% 2.6% 3% 4% 5%</span><br></pre></td></tr></table></figure><p>   接着是hotspot&#x2F;make&#x2F;linux&#x2F;makefiles&#x2F;gcc.make文件：</p>   <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">原有的 WARNINGS_ARE_ERRORS = -Werror</span><br><span class="line">修改为 <span class="comment">#WARNINGS_ARE_ERRORS = -Werror</span></span><br></pre></td></tr></table></figure><p>   接着是nashorn&#x2F;make&#x2F;BuildNashorn.gmk文件：</p>   <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$(CP) -R -p $(NASHORN_OUTPUTDIR)/nashorn_classes/* $(@D)/</span><br><span class="line">$(FIXPATH) $(JAVA) \</span><br><span class="line">原有的 -<span class="built_in">cp</span> <span class="string">&quot;<span class="subst">$(NASHORN_OUTPUTDIR)</span>/nasgen_classes<span class="subst">$(PATH_SEP)</span><span class="subst">$(NASHORN_OUTPUTDIR)</span>/nashorn_classes&quot;</span> \</span><br><span class="line">修改为  -Xbootclasspath/p:<span class="string">&quot;<span class="subst">$(NASHORN_OUTPUTDIR)</span>/nasgen_classes<span class="subst">$(PATH_SEP)</span><span class="subst">$(NASHORN_OUTPUTDIR)</span>/nashorn_classes&quot;</span> \</span><br><span class="line"></span><br><span class="line">jdk.nashorn.internal.tools.nasgen.Main $(@D) jdk.nashorn.internal.objects $(@D)</span><br></pre></td></tr></table></figure><p>   执行编译前的configure</p>   <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash configure --with-debug-level=slowdebug --enable-debug-symbols ZIP_DEBUGINFO_FIELS=0</span><br></pre></td></tr></table></figure><p>   含义解读：</p><ol><li>–with-debug-level&#x3D;slowdebug  生成一个带有调试信息的OpenJDK8版本，slowdebug表示调试级别是最低的，也就是说生成的二进制文件会比较小，但是调试信息会比较少</li><li>–enable-debug-symbols 在生成的二进制文件中包含调试符号，这样可以在使用调试工具时，看到源代码中的变量名和函数名等</li><li>ZIP_DEBUGINFO_FIELS&#x3D;0 不要将调试信息打包成zip文件，而是直接放在二进制文件中</li></ol><p>   编译</p>   <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make all</span><br></pre></td></tr></table></figure><p>   遇到问题</p>   <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">/home/jdk8/jdk/src/solaris/native/java/net/PlainDatagramSocketImpl.c:38:24: fatal error: sys/sysctl.h: 没有那个文件或目录</span><br><span class="line"><span class="comment">#include &lt;sys/sysctl.h&gt;</span></span><br><span class="line">                        ^</span><br><span class="line">compilation terminated.</span><br><span class="line">/home/jdk8/jdk/src/solaris/native/java/net/PlainSocketImpl.c:46:24: fatal error: sys/sysctl.h: 没有那个文件或目录</span><br><span class="line"><span class="comment">#include &lt;sys/sysctl.h&gt;</span></span><br><span class="line">                        ^</span><br><span class="line">compilation terminated.</span><br><span class="line">In file included from /home/jdk8/jdk/src/share/native/java/net/net_util.c:29:0:</span><br><span class="line">/home/jdk8/jdk/src/share/native/java/net/net_util.c: In <span class="keyword">function</span> ‘NET_SockaddrToInetAddress’:</span><br><span class="line">/home/jdk8/jdk/src/share/native/java/net/net_util.h:46:41: warning: comparison between pointer and <span class="built_in">integer</span> [enabled by default]</span><br><span class="line"><span class="comment">#define CHECK_NULL_RETURN(x, y) if ((x) == NULL) return y;</span></span><br><span class="line">                                        ^</span><br><span class="line">/home/jdk8/jdk/src/share/native/java/net/net_util.c:268:13: note: <span class="keyword">in</span> expansion of macro ‘CHECK_NULL_RETURN’</span><br><span class="line">            CHECK_NULL_RETURN(ret, NULL);</span><br><span class="line">            ^</span><br><span class="line">gmake[2]: *** [lib/NetworkingLibraries.gmk:57：/home/jdk8/build/linux-x86_64-normal-server-release/jdk/objs/libnet/PlainDatagramSocketImpl.o] 错误 1</span><br><span class="line">gmake[2]: *** 正在等待未完成的任务....</span><br><span class="line">gmake[2]: *** [lib/NetworkingLibraries.gmk:57：/home/jdk8/build/linux-x86_64-normal-server-release/jdk/objs/libnet/PlainSocketImpl.o] 错误 1</span><br><span class="line">gmake[1]: *** [BuildJdk.gmk:70：libs-only] 错误 2</span><br><span class="line">make: *** [/home/jdk8//make/Main.gmk:116：jdk-only] 错误 2</span><br></pre></td></tr></table></figure><p>   这个报错的主要原因是随着 glibc 2.32 的发布，Linux 系统删除了sys&#x2F;sysctl.h。</p><p>   因此解决方式只需要把openjdk8目录下的:</p><p>   jdk&#x2F;src&#x2F;solaris&#x2F;native&#x2F;java&#x2F;net&#x2F;PlainDatagramSocketImpl.c 中的38行<br>   jdk&#x2F;src&#x2F;solaris&#x2F;native&#x2F;java&#x2F;net&#x2F;PlainSocketImpl.c中的46行注释掉就行</p>   <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &lt;sys/sysctl.h&gt; 改成</span></span><br><span class="line">// <span class="comment">#include &lt;sys/sysctl.h&gt;</span></span><br></pre></td></tr></table></figure><p>   参考来自：<a href="https://blog.csdn.net/weixin_50955418/article/details/126716611">https://blog.csdn.net/weixin_50955418/article/details/126716611</a></p><p>   最后成功会显示</p>   <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">----- Build <span class="built_in">times</span> -------</span><br><span class="line">Start 2023-09-28 17:07:31</span><br><span class="line">End   2023-09-28 17:09:01</span><br><span class="line">00:00:00 corba</span><br><span class="line">00:00:06 demos</span><br><span class="line">00:00:56 docs</span><br><span class="line">00:00:00 hotspot</span><br><span class="line">00:00:08 images</span><br><span class="line">00:00:00 jaxp</span><br><span class="line">00:00:00 jaxws</span><br><span class="line">00:00:14 jdk</span><br><span class="line">00:00:00 langtools</span><br><span class="line">00:00:05 nashorn</span><br><span class="line">00:01:30 TOTAL</span><br><span class="line">-------------------------</span><br><span class="line">Finished building OpenJDK <span class="keyword">for</span> target <span class="string">&#x27;all&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>   在jdk-jdk8-b120&#x2F; 目录中输入：</p>   <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">build/linux-x86_64-normal-server-slowdebug/jdk/bin/java -version</span><br></pre></td></tr></table></figure><p>   得到结果</p>   <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">openjdk version <span class="string">&quot;1.8.0-internal-debug&quot;</span></span><br><span class="line"> OpenJDK Runtime Environment (build 1.8.0-internal-debug-root_2023_09_28_16_55-b00)</span><br><span class="line"> OpenJDK 64-Bit Server VM (build 25.0-b62-debug, mixed mode)</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">学习JVM前的openjdk8编译</summary>
    
    
    
    <category term="学习" scheme="https://blog.akievergarden.top/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="JVM" scheme="https://blog.akievergarden.top/tags/JVM/"/>
    
  </entry>
  
  <entry>
    <title>b2云存储与cloudflareSaaS的ip精选</title>
    <link href="https://blog.akievergarden.top/2023/05/27/b2%E4%BA%91%E5%AD%98%E5%82%A8%E4%B8%8EcloudflareSaaS%E7%9A%84ip%E7%B2%BE%E9%80%89/"/>
    <id>https://blog.akievergarden.top/2023/05/27/b2%E4%BA%91%E5%AD%98%E5%82%A8%E4%B8%8EcloudflareSaaS%E7%9A%84ip%E7%B2%BE%E9%80%89/</id>
    <published>2023-05-27T19:42:59.000Z</published>
    <updated>2023-09-29T05:00:54.481Z</updated>
    
    <content type="html"><![CDATA[<h1 id="说实话：-不是很稳定，这就不推荐了"><a href="#说实话：-不是很稳定，这就不推荐了" class="headerlink" title="说实话： 不是很稳定，这就不推荐了"></a>说实话： 不是很稳定，这就不推荐了</h1><p>即使进行了ip精选，稳定性能也很低，时不时加载不出图，即使能加载图片，速率也很慢（，不建议费时间</p>]]></content>
    
    
    <summary type="html">说实话： 不是很稳定，这就不推荐了 即使进行了ip精选，稳定性能也很低，时不时加载不出图，即使能加载图片，速率也很慢（，不建议费时间 </summary>
    
    
    
    <category term="日常" scheme="https://blog.akievergarden.top/categories/%E6%97%A5%E5%B8%B8/"/>
    
    
    <category term="白嫖" scheme="https://blog.akievergarden.top/tags/%E7%99%BD%E5%AB%96/"/>
    
  </entry>
  
  <entry>
    <title>javaweb实验</title>
    <link href="https://blog.akievergarden.top/2023/04/06/javaweb%E5%AE%9E%E9%AA%8C/"/>
    <id>https://blog.akievergarden.top/2023/04/06/javaweb%E5%AE%9E%E9%AA%8C/</id>
    <published>2023-04-06T08:39:52.000Z</published>
    <updated>2023-09-29T05:00:54.481Z</updated>
    
    <content type="html"><![CDATA[<h1 id="相对路径"><a href="#相对路径" class="headerlink" title="相对路径"></a>相对路径</h1><p>使用相对路径进行图片展示<p><p><img src="/pic/illust_93484813_20220917_200428.jpg" alt="相对路径"></p><h1 id="绝对路径"><a href="#绝对路径" class="headerlink" title="绝对路径"></a>绝对路径</h1><p>使用绝对路径进行图片展示<p><p><img src="https://img.mknacg.top:458/images/2020/04/01/BoxFront1.jpg" alt="绝对路径"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;相对路径&quot;&gt;&lt;a href=&quot;#相对路径&quot; class=&quot;headerlink&quot; title=&quot;相对路径&quot;&gt;&lt;/a&gt;相对路径&lt;/h1&gt;&lt;p&gt;使用相对路径进行图片展示&lt;p&gt;

&lt;p&gt;&lt;img src=&quot;/pic/illust_93484813_20220917_20</summary>
      
    
    
    
    
    <category term="实验" scheme="https://blog.akievergarden.top/tags/%E5%AE%9E%E9%AA%8C/"/>
    
  </entry>
  
</feed>
